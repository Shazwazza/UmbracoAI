@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using Umbraco.Cms.Core.Models.PublishedContent
@using Umbraco.Extensions
@{
    // Get the root node (Home)
    var root = Model.Root();
    var currentPage = Model;
    
    // Get all top-level pages (children of Home)
    var topLevelPages = root.Children().Where(x => x.IsVisible()).OrderBy(x => x.SortOrder);
}

<nav class="main-navigation">
    <div class="nav-container">
        <!-- Logo/Home Link -->
        <div class="nav-brand">
            <a href="@root.Url()" class="brand-link">
                <span class="brand-name">@root.Name</span>
            </a>
        </div>

        <!-- Mobile Menu Toggle -->
        <button class="nav-toggle" aria-label="Toggle navigation">
            <span class="nav-toggle-icon"></span>
        </button>

        <!-- Navigation Menu -->
        <ul class="nav-menu">
            <!-- Home Link -->
            <li class="nav-item @(currentPage.Id == root.Id ? "active" : "")">
                <a href="@root.Url()" class="nav-link">Home</a>
            </li>

            <!-- Top-level pages -->
            @foreach (var page in topLevelPages)
            {
                var isActive = currentPage.Id == page.Id || currentPage.AncestorOrSelf(page.Level)?.Id == page.Id;
                var hasChildren = page.Children.Any(x => x.IsVisible());
                
                <li class="nav-item @(isActive ? "active" : "") @(hasChildren ? "has-children" : "")">
                    <a href="@page.Url()" class="nav-link">@page.Name</a>
                    
                    @if (hasChildren)
                    {
                        <ul class="nav-submenu">
                            @foreach (var child in page.Children().Where(x => x.IsVisible()).OrderBy(x => x.SortOrder))
                            {
                                var isChildActive = currentPage.Id == child.Id;
                                <li class="nav-subitem @(isChildActive ? "active" : "")">
                                    <a href="@child.Url()" class="nav-sublink">@child.Name</a>
                                </li>
                            }
                        </ul>
                    }
                </li>
            }
        </ul>
    </div>
</nav>

<script>
    // Mobile menu toggle
    document.addEventListener('DOMContentLoaded', function() {
        const navToggle = document.querySelector('.nav-toggle');
        const navMenu = document.querySelector('.nav-menu');
        
        if (navToggle && navMenu) {
            navToggle.addEventListener('click', function() {
                navMenu.classList.toggle('active');
                navToggle.classList.toggle('active');
            });
        }
    });
</script>